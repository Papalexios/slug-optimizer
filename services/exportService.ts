
import { URLResult } from '../types';

// These are declared because they are loaded from CDN
declare const JSZip: any;
declare const saveAs: any;

const sanitizeForPhp = (str: string) => str.replace(/'/g, "\\'").replace(/\\/g, '\\\\');

const generatePluginPHP = (results: URLResult[]): string => {
  const redirects = results
    .map(r => {
      const fromPath = new URL(r.originalUrl).pathname;
      const toUrl = new URL(r.originalUrl);
      toUrl.pathname = r.proposedSlug;
      return `  '${sanitizeForPhp(fromPath)}' => '${sanitizeForPhp(toUrl.toString())}',`;
    })
    .join('\n');

  return `<?php
/**
 * Plugin Name:       AI Geo-Targeted Slug Redirector
 * Description:       Automatically redirects old URLs to new, SEO-optimized, geo-targeted URLs generated by the AI Slug Optimizer.
 * Version:           1.0.0
 * Author:            AI Slug Optimizer
 */

if (!defined('WPINC')) {
    die;
}

add_action('template_redirect', function() {
    $redirect_map = [
${redirects}
    ];

    $request_uri = $_SERVER['REQUEST_URI'];
    // Remove query string for matching
    $request_path = strtok($request_uri, '?');

    if (isset($redirect_map[$request_path])) {
        $new_url = $redirect_map[$request_path];
        // Append query string if it exists
        if (strpos($request_uri, '?') !== false) {
            $new_url .= '?' . substr(strrchr($request_uri, '?'), 1);
        }
        
        wp_redirect($new_url, 301);
        exit;
    }
});
`;
};

export const generatePluginZip = (results: URLResult[]): void => {
  const phpContent = generatePluginPHP(results);
  const zip = new JSZip();
  zip.file('ai-slug-redirector/ai-slug-redirector.php', phpContent);
  zip.generateAsync({ type: 'blob' }).then((content: any) => {
    saveAs(content, 'ai-slug-redirector.zip');
  });
};

export const generateWpCliCommands = (results: URLResult[]): string => {
  return results
    .map(r => {
      const newUrl = new URL(r.originalUrl);
      newUrl.pathname = r.proposedSlug;
      return `wp search-replace '${r.originalUrl}' '${newUrl.toString()}' --all-tables --report-changed-only`;
    })
    .join('\n');
};

export const generateSqlScript = (results: URLResult[], dbPrefix: string = 'wp_'): string => {
  const tables = [
    'posts',
    'postmeta',
    'options',
    'termmeta',
    'usermeta',
    'comments',
  ];

  const header = `-- IMPORTANT: BACKUP YOUR DATABASE BEFORE RUNNING THIS SCRIPT.
-- This script performs a search and replace on core WordPress tables.
-- Run at your own risk.

`;

  const queries = results
    .map(r => {
      const newUrl = new URL(r.originalUrl);
      newUrl.pathname = r.proposedSlug;
      const from = r.originalUrl;
      const to = newUrl.toString();

      return tables
        .map(table => `UPDATE ${dbPrefix}${table} SET post_content = REPLACE(post_content, '${from}', '${to}') WHERE post_content LIKE '%${from}%'; -- Example for post_content, adapt for other columns`)
        .join('\n');
    })
    .join('\n\n');
    
    const footer = `
-- Note: The queries above are examples for 'post_content'. You will need to adapt them
-- for other columns like 'guid', 'post_excerpt', 'meta_value', 'option_value', etc.
-- A comprehensive search-replace requires checking all text-based columns.
-- Using the WP-CLI method is strongly recommended for a safer and more complete update.
`;
    
  return header + queries + footer;
};
